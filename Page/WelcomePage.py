# -*- coding: utf-8 -*-
import sys

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QApplication, QMainWindow
from Singal.Draggable import Draggable
class WelcomeWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi()
        self.setPosition()
        self.setStyle()
        self.setTool()
    def mousePressEvent(self, event):
        self.draggable.mousePressEvent(event)
    def mouseMoveEvent(self, event):
        self.draggable.mouseMoveEvent(event)
    def setTool(self):
        self.draggable = Draggable(self)  #<------登陆界面拖拽功能------>
    def setStyle(self, **kwargs):
        self.widget.setStyleSheet(
            "border-radius: 20px;\n"

            "background-color: 	#CDCDB4;\n"

        )
        self.widget1.setStyleSheet(
            "border-radius: 20px;\n"
            "background-color: #EEEED1;\n"

        )
        self.widget2.setStyleSheet(
            "border-radius: 20px;\n"
            "background-color: #EEEED1;\n"

        )

        self.EasyModelBtn.setStyleSheet(
            "background-color: #FFFFE0;\n"
            "color: #8B7E66;\n"
            "border-radius: 10px;\n"
            "font: 14pt \"宋体\" ;"
            "font-weight: bold;"
        )
        self.MiddleModelBtn.setStyleSheet(
            "background-color: #FFFFE0;\n"
            "color: #8B7E66;\n"
            "border-radius: 10px;\n"
            "font: 14pt \"宋体\" ;"
            "font-weight: bold;"
        )
        self.HardModelBtn.setStyleSheet(
            "background-color: #FFFFE0;\n"
            "color: #8B7E66;\n"
            "border-radius: 10px;\n"
            "font: 14pt \"宋体\" ;"
            "font-weight: bold;"
        )
        self.WelcomeLabel.setStyleSheet(
            "border-radius: 15px;\n"
            "font: 30pt \"宋体\";"
            "color :#FFB90F"
        )
        self.CloseBtn.setStyleSheet(
            "background-color: #FFFFE0;\n"
            "font: 25pt \"Times New Roman\";"
            "color: #CD5555;\n"

            "border-radius: 15px;\n"
        )
        self.TipChoose.setStyleSheet(
            "border-radius: 15px;\n"
            "font: 15pt \"宋体\";"
            "font-weight: bold;"
            "color : #CD5555"
        )
        self.OrderChartBtn.setStyleSheet(
            # "background-color: rgba(255, 236, 199, 128);\n"
            "color: #CD5555;\n"
            "border-radius: 10px;\n"
            "font: 13pt \"宋体\" ;"
            "font-weight: bold;"
        )
    def setPosition(self):
        self.widget.setGeometry(0, 0, 1080, 580)
        self.widget1.setGeometry(int(self.widget.width() // 1.9), 80, int(self.widget.width() // 2.3), 420)
        self.widget2.setGeometry(int(self.widget.width() // 13), 80, int(self.widget.width() // 2.7), 420)
        self.OrderChartBtn.setGeometry(125, self.widget2.height() // 2 + 20, self.widget2.width() // 2 - 50, 50)
        self.HardModelBtn.setGeometry(self.widget1.width() // 4, 300, int(self.widget1.width() // 1.8), 90)
        self.EasyModelBtn.setGeometry(self.widget1.width() // 4, 50, int(self.widget1.width() // 1.8), 90)
        self.MiddleModelBtn.setGeometry(self.widget1.width() // 4, 180, int(self.widget1.width() // 1.8), 90)
        self.WelcomeLabel.setGeometry(0, self.widget2.height() // 2 - 150, 390, 80)
        self.CloseBtn.setGeometry(self.widget.width() - 60, 10, 50, 30)
        self.TipChoose.setGeometry(15, self.widget2.height() // 2 + 80, self.widget2.width(), 50)
    def setupUi(self):
        self.setObjectName("Frame")
        self.resize(1200, 700)
        self.setStyleSheet("")

        self.setWindowFlags(Qt.FramelessWindowHint)
        self.setAttribute(Qt.WA_TranslucentBackground)
        self.widget = QtWidgets.QWidget(self)
        self.widget1 = QtWidgets.QWidget(self)
        self.widget2 = QtWidgets.QWidget(self)

        self.OrderChartBtn = QtWidgets.QPushButton(self.widget2)
        self.TipChoose = QtWidgets.QLabel(self.widget2)

        self.TipChoose.setAlignment(QtCore.Qt.AlignCenter)
        self.TipChoose.setObjectName("WelcomeLabel")
        self.widget.setObjectName("widget")
        self.HardModelBtn = QtWidgets.QPushButton(self.widget1)
        self.HardModelBtn.setObjectName("HardModelBtn")
        self.EasyModelBtn = QtWidgets.QPushButton(self.widget1)
        self.EasyModelBtn.setObjectName("EasyModelBtn")
        self.MiddleModelBtn = QtWidgets.QPushButton(self.widget1)
        self.MiddleModelBtn.setObjectName("MiddleModelBtn")
        self.WelcomeLabel = QtWidgets.QLabel(self.widget2)
        self.WelcomeLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.WelcomeLabel.setTextFormat(QtCore.Qt.MarkdownText)
        self.WelcomeLabel.setObjectName("WelcomeLabel")
        self.CloseBtn = QtWidgets.QPushButton(self.widget)
        self.CloseBtn.setObjectName("CloseBtn")

        self.retranslateUi()
        self.CloseBtn.clicked.connect(self.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("self", "self"))
        self.HardModelBtn.setText(_translate("self", "困难模式"))
        self.EasyModelBtn.setText(_translate("self", "简单模式"))
        self.MiddleModelBtn.setText(_translate("self", "中等模式"))
        self.WelcomeLabel.setText(_translate("self", "猜数字"))
        self.CloseBtn.setText(_translate("self", "×"))
        self.TipChoose.setText(_translate("self", "请在右侧选择难度-->"))
        self.OrderChartBtn.setText(_translate("self", "-- 排行榜 --"))

if __name__ == '__main__':
    app = QApplication(sys.argv)
    frame = WelcomeWindow()
    frame.show()
    sys.exit(app.exec_())